#!/usr/bin/env node

var shell = require("shelljs");
var readline = require('readline');
var argv = require('yargs')
    .alias('n', 'num')
    .argv;

var rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
    terminal: false
});
var execArr = [];

//获取所有的参数作为后续的指令
var cmd = process.argv.slice(2).join(" ");

function run(n) {
    rl.on('line', function (line) {
        line.split(' ').forEach(item => {
            if (item && item != '\\')
                execArr.push(item);
        });
        //如果用户指定了n，则每次只处理n个输入
        while (execArr.length >= n && n > 0) {
            exec(cmd, execArr.slice(0, n).join(" "));
            execArr = execArr.slice(n)
        }
    }).on('close', function () {
        while (execArr.length >= n && n > 0) {
            exec(cmd, execArr.slice(0, n).join(" "));
            execArr = execArr.slice(n)
        }
        if (execArr.length > 0)
            exec(cmd, execArr.join(" "));
    });
}

function exec(cmd, file) {
    //处理特殊字符
    file = file.replace(/`/g, '\\\`');
    file = file.replace(/#/g, '\\\#');
    file = file.replace(/\|/g, '\\\|');
    file = file.replace(/@/g, '\\\@');
    file = file.replace(/\$/g, '\\\$');
    file = file.replace(/%/g, '\\\%');
    file = file.replace(/\^/g, '\\\^');
    file = file.replace(/&/g, '\\\&');
    file = file.replace(/\*/g, '\\\*');
    file = file.replace(/\(/g, '\\\(');
    file = file.replace(/\)/g, '\\\)');
    if (!cmd) //如果用户未指定命令，则直接输出所有输入
        cmd = 'echo';
    shell.exec(cmd + " " + file);
}

//如果用户指定了n，那么每次处理n个输入，否则只处理一次
if (process.argv[2] == '-n') {
    cmd = process.argv.slice(4).join(" ");
    run(argv.n);
} else {
    cmd = process.argv.slice(2).join(" ");
    run(-1);
}